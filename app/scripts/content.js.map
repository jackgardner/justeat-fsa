{"version":3,"sources":["../scripts.babel/content.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;IAEP,SAAS;AACb,WADI,SAAS,GACC;0BADV,SAAS;;;;;;;AAQX,QAAM,qBAAqB,GAAG,GAAG,CAAC;AAClC,QAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CACxC,QAAQ,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAC/C,UAAC,IAAI,EAAK;AAAE,aAAO,IAAI,CAAC,WAAW,CAAC;KAAE,CAAC,CAAC;;AAE5C,QAAI,CAAC,WAAW,gDAA8C,qBAAqB,SAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAO,CAAC;GACtH;;eAdG,SAAS;;iCAgBA,MAAM,EAAE;AACnB,UAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC9C,eAAS,CAAC,YAAY,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAC9C,UAAI,QAAQ,GAAG,UAAU,CAAC;AAC1B,UAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1C,WAAK,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,IAAM,MAAM,UAAM,CAAC,CAAC,CAAC;AAC/E,WAAK,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC;;;;;;;;;;;;;;;;AAAC,AAgB3C,eAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;AAE7B,UAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;KAC/B;;;kCAEa,IAAI,EAAE;AAClB,UAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACtD,gBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAC9B;;;4BAEO;;;AAEN,WAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CACpB,IAAI,CAAC,UAAC,MAAM,EAAK;AAAE,eAAO,MAAM,CAAC,IAAI,EAAE,CAAC;OAAE,CAAC,CAC3C,IAAI,CAAC,UAAC,IAAI,EAAK;AACd,YAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACpE,YAAG,SAAS,KAAK,CAAC,EAAE;AAClB,cAAM,MAAM,GAAG,IAAI,CAChB,iBAAiB,CACjB,uBAAuB,CACvB,mBAAmB,CAAC;;AAEvB,gBAAK,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;SACpD,MAAM,IAAG,SAAS,GAAG,CAAC,EAAE;AACvB,cAAM,MAAM,GAAG,IAAI,CAChB,iBAAiB,CACjB,uBAAuB,CACvB,mBAAmB,CAAC,CAAC,CAAC,CAAC;;AAE1B,gBAAK,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;SACpD,MAAM;AACL,cAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC/C,qBAAW,CAAC,WAAW,GAAG,iCAAiC,CAAC;;AAE5D,gBAAK,aAAa,CAAC,WAAW,CAAC,CAAC;SACjC;OACF,CAAC,CACD,KAAK,CAAC,UAAC,GAAG,EAAK;AACd,eAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OACpB,CAAC,CAAC;KAEN;;;SA/EG,SAAS;;;AAkFf,IAAM,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC;AAC5B,GAAG,CAAC,KAAK,EAAE,CAAC","file":"content.js","sourcesContent":["'use strict';\n\nclass FSAModule {\n  constructor() {\n\n    // const item = document.querySelector('.details .name');\n\n    // const currentRestaurantName = item.innerHTML;\n    // const currentTown = document.querySelector('#postcode').innerHTML;\n\n    const currentRestaurantName = '^';\n    const currentTown = Array.prototype.map.call(\n        document.querySelectorAll('#street, #postcode'),\n        (node) => { return node.textContent; });\n\n    this.apiEndpoint = `http://ratings.food.gov.uk/search/en-gb/${currentRestaurantName}/${currentTown.join(', ')}/json`;\n  }\n\n  insertScores(rating) {\n    let scoreNode = document.createElement('div');\n    scoreNode.setAttribute('id', 'hygieneRating');\n    let imageSrc = '/images/';\n    let image = document.createElement('img');\n    image.setAttribute('src', chrome.extension.getURL(imageSrc + `${rating}.jpg`));\n    image.setAttribute('style', 'float:right');\n\n    // for(let score in scores) {\n    //   let statWrap = document.createElement('div');\n    //\n    //   let statKey = document.createElement('span');\n    //   let statValue = document.createElement('span');\n    //\n    //   statKey.textContent = score;\n    //   statValue.textContent = scores[score];\n    //\n    //   statWrap.appendChild(statKey);\n    //   statWrap.appendChild(statValue);\n    //\n    //   scoreNode.appendChild(statWrap);\n    // }\n    scoreNode.appendChild(image);\n\n    this.renderContent(scoreNode);\n  }\n\n  renderContent(node) {\n    const ratingArea = document.querySelector('.ratings');\n    ratingArea.appendChild(node);\n  }\n\n  query() {\n\n    fetch(this.apiEndpoint)\n      .then((result) => { return result.json(); })\n      .then((body) => {\n        const itemCount = parseInt(body.FHRSEstablishment.Header.ItemCount);\n        if(itemCount === 1) {\n          const result = body\n            .FHRSEstablishment\n            .EstablishmentCollection\n            .EstablishmentDetail;\n\n          this.insertScores(result.RatingKey, result.Scores);\n        } else if(itemCount > 1) {\n          const result = body\n            .FHRSEstablishment\n            .EstablishmentCollection\n            .EstablishmentDetail[0];\n\n          this.insertScores(result.RatingKey, result.Scores);\n        } else {\n          let warningNode = document.createElement('h3');\n          warningNode.textContent = 'No food hygiene data available.';\n\n          this.renderContent(warningNode);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n  }\n}\n\nconst fsa = new FSAModule();\nfsa.query();\n"]}